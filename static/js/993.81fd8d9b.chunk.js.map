{"version":3,"file":"static/js/993.81fd8d9b.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,yBADU,cAC3BH,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBG,EAAgC,mCAAG,WAAMC,GAAN,uFACvBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,EAAjC,oBADuB,cACxCE,EADwC,yBAEvCA,EAASC,MAF8B,2CAAH,sDAKhCK,EAAoB,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADW,cAC5BE,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,sDAOpBM,EAAiB,mCAAG,WAAMF,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD,8KC1BjBO,EAAmBC,EAAAA,GAAAA,IAAH,gF,SCChBC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,8BACGA,IACC,UAACH,EAAD,WACGG,EAAMC,aACL,gBACEC,IAAG,0CAAqCF,EAAMC,aAC9CE,IAAKH,EAAMI,MACXC,MAAM,MACNC,OAAO,SAGT,gBACEJ,IAAI,yHACJC,IAAKH,EAAMI,MACXC,MAAM,MACNC,OAAO,SAGX,4BACE,4BACE,0BACGN,EAAMI,MADT,IACiBJ,EAAMO,aAAaC,MAAM,EAAG,GAD7C,QAGA,wCAAgBC,KAAKC,MAA2B,GAArBV,EAAMW,cAAjC,WAEF,4BACE,sCACA,uBAAIX,EAAMY,eAEZ,4BACE,oCACA,yBACGZ,EAAMa,OAAOC,KAAI,SAAAC,GAChB,OAAO,uBAAmBA,EAAMC,MAAjBD,EAAMrB,GACtB,gBAQhB,E,UC5CYuB,GAAanB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,iPCCVqB,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECmCD,EAxCqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOvB,EAAP,KAAcwB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAc9C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBxC,EAAAA,EAAAA,IAAiCgC,GAFxD,OAEUnC,EAFV,OAGIkC,EAASlC,GAHb,gDAKI4C,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,iCACE,0BACE,SAACN,EAAD,CAAUC,GAAIS,EAAOO,QAArB,wBAEF,SAACrC,EAAD,CAAWC,MAAOA,KAClB,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMoB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,SAIP,C","sources":["api-service/api.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","components/BackLink/BackLink.style.js","components/BackLink/BackLink.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'aaa12d4440cdf67f9c9c4c90ab823aeb';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchPrimaryInformationAboutFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchCastInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const MovieCardWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieCardWrapper } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  return (\n    <>\n      {movie && (\n        <MovieCardWrapper>\n          {movie.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              width=\"300\"\n              height=\"300\"\n            />\n          ) : (\n            <img\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\n              alt={movie.title}\n              width=\"300\"\n              height=\"300\"\n            />\n          )}\n          <div>\n            <div>\n              <h2>\n                {movie.title}({movie.release_date.slice(0, 4)})\n              </h2>\n              <p>User score: {Math.round(movie.vote_average * 10)}%</p>\n            </div>\n            <div>\n              <h3>Overview</h3>\n              <p>{movie.overview}</p>\n            </div>\n            <div>\n              <h3>Genres</h3>\n              <div>\n                {movie.genres.map(genre => {\n                  return <p key={genre.id}>{genre.name}</p>;\n                })}\n              </div>\n            </div>\n          </div>\n        </MovieCardWrapper>\n      )}\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.object,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport PropTypes from 'prop-types';\nimport { StyledLink } from './BackLink.style';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useRef } from 'react';\nimport { fetchPrimaryInformationAboutFilm } from 'api-service/api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { BackLink } from 'components/BackLink/BackLink';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const locRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    async function getMovieById() {\n      try {\n        const data = await fetchPrimaryInformationAboutFilm(movieId);\n        setMovie(data);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <BackLink to={locRef.current}>Go back</BackLink>\n      </div>\n      <MovieCard movie={movie} />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","fetchTrendingFilms","response","data","fetchFilmsByKeyword","keyword","fetchPrimaryInformationAboutFilm","id","fetchCastInformation","fetchFilmsReviews","MovieCardWrapper","styled","MovieCard","movie","poster_path","src","alt","title","width","height","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","StyledLink","Link","BackLink","to","children","size","useState","setMovie","movieId","useParams","location","useLocation","locRef","useRef","state","from","useEffect","alert","getMovieById","current"],"sourceRoot":""}