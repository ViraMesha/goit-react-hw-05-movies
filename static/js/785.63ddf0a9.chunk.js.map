{"version":3,"file":"static/js/785.63ddf0a9.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,yBADU,cAC3BH,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBG,EAAgC,mCAAG,WAAMC,GAAN,uFACvBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,EAAjC,oBADuB,cACxCE,EADwC,yBAEvCA,EAASC,MAF8B,2CAAH,sDAKhCK,EAAoB,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADW,cAC5BE,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,sDAOpBM,EAAiB,mCAAG,WAAMF,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD,gHCS9B,UAlCgB,WACd,OAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBN,EAAAA,EAAAA,IAAkBI,GAFzC,OAEUV,EAFV,OAGIS,EAAWT,EAAKa,SAHpB,gDAKIC,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACL,KAGF,gCACsB,IAAnBF,EAAQQ,SAAgB,mEACxBR,EAAQQ,OAAS,IAChB,yBACGR,EAAQS,KAAI,SAAAC,GACX,OACE,4BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOd,GAKpB,QAKV,C","sources":["api-service/api.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'aaa12d4440cdf67f9c9c4c90ab823aeb';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchPrimaryInformationAboutFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchCastInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchFilmsReviews } from 'api-service/api';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await fetchFilmsReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We don't have any reviews for the movie</p>}\n      {reviews.length > 0 && (\n        <div>\n          {reviews.map(review => {\n            return (\n              <div key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","KEY","fetchTrendingFilms","response","data","fetchFilmsByKeyword","keyword","fetchPrimaryInformationAboutFilm","id","fetchCastInformation","fetchFilmsReviews","useState","reviews","setReviews","movieId","useParams","useEffect","results","alert","getReviews","length","map","review","author","content"],"sourceRoot":""}