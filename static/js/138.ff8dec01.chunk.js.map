{"version":3,"file":"static/js/138.ff8dec01.chunk.js","mappings":"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","sources":["api-service/api.js","components/FilmsList/FilmList.styled.js","components/FilmsList/FilmsList.js","components/Searchbox/Searchbox.styled.js","components/Searchbox/Searchbox.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'aaa12d4440cdf67f9c9c4c90ab823aeb';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchPrimaryInformationAboutFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchCastInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n`;\n\nexport const ProductName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useLocation, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, CardWrapper, ProductName } from './FilmList.styled';\n\nexport const FilmsList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(movie => (\n        <CardWrapper key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n                width=\"300\"\n                height=\"300\"\n              />\n            ) : (\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\n                alt={movie.title}\n                width=\"300\"\n                height=\"300\"\n              />\n            )}\n            <ProductName>{movie.title}</ProductName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n\nFilmsList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 200px;\n  overflow: hidden;\n  margin-bottom: 20px;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 35px;\n  height: 35px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 100%;\n  font: inherit;\n  font-size: 14px;\n  border: 1px solid #e8eaf6;\n  border-radius: 5px;\n  outline: none;\n  padding: 5px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 12px;\n  }\n  &:hover,\n  &:focus {\n    border: 2px solid #6472c1;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { BsSearch } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n} from './Searchbox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleInputChange = event => {\n    const { value } = event.target;\n    setSearchValue(value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchValue.trim() === '') {\n      return toast.error('Please enter keyword for image search');\n    }\n    onSubmit(searchValue);\n    setSearchValue('');\n  };\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormButton type=\"submit\">\n        <BsSearch fill=\"blue\" />\n      </SearchFormButton>\n\n      <SearchFormInput\n        onChange={handleInputChange}\n        name=\"searchValue\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n    </SearchForm>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FilmsList } from 'components/FilmsList/FilmsList';\nimport { fetchFilmsByKeyword } from 'api-service/api';\nimport { SearchBox } from 'components/Searchbox/Searchbox';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n\n  useEffect(() => {\n    async function getMoviesByKeyword() {\n      if (movieName === '') {\n        return;\n      }\n      try {\n        const data = await fetchFilmsByKeyword(movieName);\n        if (data.results.length > 0) {\n          setMovies(data.results);\n        }\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getMoviesByKeyword();\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleFormSubmit} />\n      {movies && <FilmsList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","fetchTrendingFilms","response","data","fetchFilmsByKeyword","keyword","fetchPrimaryInformationAboutFilm","id","fetchCastInformation","fetchFilmsReviews","Container","styled","CardWrapper","ProductName","FilmsList","movies","location","useLocation","map","movie","to","state","from","poster_path","src","alt","title","width","height","SearchForm","SearchFormButton","SearchFormInput","SearchBox","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","trim","toast","type","fill","onChange","value","target","toLowerCase","name","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","setMovies","movieName","get","useEffect","results","length","alert","getMoviesByKeyword","query"],"sourceRoot":""}