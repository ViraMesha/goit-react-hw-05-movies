{"version":3,"file":"static/js/541.4d4c1536.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAkB,mCAAG,oGACTF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD/B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCAC+BK,EAD/B,yBADU,cAC3BH,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAOnBG,EAAgC,mCAAG,WAAMC,GAAN,uFACvBR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCP,EAAjC,oBADuB,cACxCE,EADwC,yBAEvCA,EAASC,MAF8B,2CAAH,sDAKhCK,EAAoB,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADW,cAC5BE,EAD4B,yBAI3BA,EAASC,MAJkB,2CAAH,sDAOpBM,EAAiB,mCAAG,WAAMF,GAAN,uFACRR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACUP,EADV,oBADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qD,gHCqB9B,UA9Ca,WACX,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBP,EAAAA,EAAAA,IAAqBK,GAF5C,OAEUV,EAFV,OAGIS,EAAQT,EAAKQ,MAHjB,gDAKIK,MAAM,SALV,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACJ,KAGF,yBACGF,IACC,wBACGA,EAAKO,KAAI,SAAAC,GACR,OACE,0BACGA,EAAMC,cACL,gBACEC,IAAG,0CAAqCF,EAAMC,cAC9CE,IAAKH,EAAMI,KACXC,MAAM,SAGR,gBACEH,IAAI,yHACJC,IAAKH,EAAMI,KACXC,MAAM,SAGV,wBAAKL,EAAMI,QACX,uCAAeJ,EAAMM,eAfdN,EAAMZ,GAkBlB,OAKV,C","sources":["api-service/api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'aaa12d4440cdf67f9c9c4c90ab823aeb';\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const fetchFilmsByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&query=${keyword}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const fetchPrimaryInformationAboutFilm = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const fetchCastInformation = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n","import { fetchCastInformation } from 'api-service/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function getCast() {\n      try {\n        const data = await fetchCastInformation(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        alert('Error');\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast && (\n        <ul>\n          {cast.map(actor => {\n            return (\n              <li key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                    alt={actor.name}\n                    width=\"150\"\n                  />\n                ) : (\n                  <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png\"\n                    alt={actor.name}\n                    width=\"150\"\n                  />\n                )}\n                <h3>{actor.name}</h3>\n                <p>Character: {actor.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","KEY","fetchTrendingFilms","response","data","fetchFilmsByKeyword","keyword","fetchPrimaryInformationAboutFilm","id","fetchCastInformation","fetchFilmsReviews","useState","cast","setCast","movieId","useParams","useEffect","alert","getCast","map","actor","profile_path","src","alt","name","width","character"],"sourceRoot":""}